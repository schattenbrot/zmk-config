/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

#include "../zmk-nodefree-config/helper.h"

#define PWR_TOGGLE &ext_power EP_TOG

#define DEFAULT 0
#define NUM 1
#define SYM 2
#define FUN 3
#define NAV 4

/* custom behaviors */

// homerow mods
ZMK_BEHAVIOR(hrm, hold_tap,
  flavor = "balanced";
  tapping-term-ms = <280>;
  quick-tap-ms = <125>;
  bindings = <&kp>, <&kp>;
)

&mt {
    //  flavor = "tap-preferred";
     tapping_term_ms = <400>;
};

&led_strip {
    chain-length = <23>;
};

/ {

    combos {
        compatible = "zmk,combos";

        combo_tab {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <30 31>;
            bindings = <&kp TAB>;
        };

        combo_col {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp COLON>;
        };

        combo_lparanthesis {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <6 7>;
            bindings = <&kp LPAR>;
        };
        combo_rparanthesis {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp RPAR>;
        };
        
        combo_lessthan {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <26 28>;
            bindings = <&kp LESS_THAN>;
        };
        combo_greaterthan {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <27 228>;
            bindings = <&kp GREATER_THAN>;
        };
        
        combo_leftbracket {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp LEFT_BRACKET>;
        };
        combo_rightbracket {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp RIGHT_BRACKET>;
        };
        
        combo_leftbrace {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp LEFT_BRACE>;
        };
        combo_rightbrace {
            layers = <DEFAULT>;
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp RIGHT_BRACE>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
            &kp Q        &kp W        &kp F        &kp P        &kp B                    &kp J        &kp L        &kp U        &kp Y        &kp SCLN 
            &hrm LALT A  &hrm LCTL R &hrm LSFT S   &hrm LGUI T  &hrm RALT G              &hrm RALT M  &hrm RGUI N  &hrm RSFT E  &hrm RCTL I  &hrm LALT O
            &kp Z        &kp X        &kp C        &kp D        &kp V                    &kp K        &kp H        &kp CMMA     &kp DOT      &kp FSLH
                                                   &lt NAV RET  &lt NUM ESC              &lt SYM SPC  &lt FUN BSPC
            >;
        };

        number_layer {
            bindings = <
            &none        &none        &none        &none        &none                   &kp FSLH     &kp NUM_7    &kp NUM_8    &kp NUM_9    &kp MINUS 
            &kp LALT     &kp LCTL     &kp LSHFT    &kp LGUI     &none                   &kp STAR     &kp NUM_4    &kp NUM_5    &kp NUM_6    &kp PLUS
            &none        &none        &none        &none        &none                   &kp EQUAL    &kp NUM_1    &kp NUM_2    &kp NUM_3    &kp RET
                                                   &none        &trans                  &kp SPC      &kp NUM_0
            >;
        };

        symbol_layer {
            bindings = <
            &kp GRAVE    &TILDE       &none        &none        &none                    &none        &none        &none        &none        &kp DEL 
            &kp EXCL     &kp AT       &kp HASH     &kp DOLLAR   &kp PERCENT              &kp CARET    &kp AMPS     &kp STAR     &kp EQUAL    &kp SQT
            &kp BSLH     &kp PIPE     &none        &kp MINUS    &none                    &none        &kp UNDER    &none        &none        &kp DQT
                                                   &none        &none                    &trans       &kp DEL
            >;
        };

        function_layer {
            bindings = <
            &kp F9       &kp F10      &kp F11      &kp F12      &none                    &none        &none        &none        &none        &none
            &kp F5       &kp F6       &kp F7       &kp F8       &none                    &kp RALT     &kp LGUI     &kp RSFT     &kp RCTL     &kp LALT
            &kp F1       &kp F2       &kp F3       &kp F4       &none                    &none        &none        &none        &none        &none
                                                   &none        &none                    &none        &trans
            >;
        };

        nagivation_layer {
            bindings = <
            PWR_TOGGLE   &none        &none        &none        &none                    &kp PG_UP    &kp HOME     &kp PG_DN  &kp END      &none 
            &kp LALT     &kp LCTL     &kp LSFT     &kp LGUI     &kp RALT                 &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &none
            &bt BT_CLR   &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &none                    &none        &none        &none        &none        &none
                                                   &trans       &none                    &kp K_CMENU  &kp DEL
            >;
        };
    };
};
